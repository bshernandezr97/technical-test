{"version":3,"sources":["redux/types/types.js","redux/reducers/clasificationReducer.js","redux/reducers/movieReducer.js","redux/reducers/uiReducer.js","redux/store/store.js","components/ui/Navbar.js","fixtures/modalStyles.js","redux/actions/ui.js","redux/actions/movie.js","redux/actions/clasification.js","components/clasification/ClasificationForm.js","components/clasification/ClasificationTable.js","pages/ClasificationPage.js","components/movies/MoviesForm.js","hooks/useForm.js","components/movies/MoviesTable.js","pages/MoviesPage.js","routes/AppRouter.js","MoviesApp.js","index.js"],"names":["types","initialState","clasifications","active","movies","loading","movieModal","classificationModal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","ui","state","action","type","payload","filter","m","_id","console","log","map","clasification","c","store","createStore","applyMiddleware","thunk","Navbar","className","to","icon","faFilm","modalStyles","content","top","left","right","bottom","marginRight","transform","showLoading","hideLoading","showClassificationModal","showMovieModal","endPoint","process","addMovie","movie","deleteMovie","movieId","updateMovie","startLoadMovie","dispatch","a","fetch","res","json","movieRes","ok","Swal","fire","message","addClasification","deleteClasification","clasificationId","updateClasification","Modal","setAppElement","ClassificationForm","useState","name","setName","useSelector","isLoadActive","useRef","useDispatch","validateForm","validator","isEmpty","handleCloseModal","useEffect","current","isOpen","style","onClick","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","clasificationRes","startAddClasification","value","onChange","target","ClasificationTable","handleEdit","setActiveClasification","handleDelete","startDeleteClasification","renderItems","faEdit","faTrash","length","ClasificationPage","faPlus","director","MoviesForm","values","setValues","init","useForm","formValues","handleChange","reset","getState","find","startAddMovie","MoviesTable","setActiveMovie","startDeleteMovie","MoviesPage","AppRouter","getDenyButton","exact","path","component","MoviesApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77bcc1cf.chunk.js","sourcesContent":["export const types = {\n    // clasification actions\n    addClasification: '[clasification] add',\n    loadClasifications: '[clasification] load',\n    updateClasification: '[clasification] update',\n    deleteClasification: '[clasification] delete',\n    setActiveClassification: '[clasification] setActive',\n    clearActiveClassification: '[clasification] clearActive',\n    // movie actions\n    addMovie: '[movie] add',\n    loadMovies: '[movie] load',\n    updateMovie: '[movie] update',\n    deleteMovie: '[movie] delete',    \n    setActiveMovie: '[movie] setActive',\n    clearActiveMovie: '[movie] clearActive',\n    // ui actions\n    showLoading: '[ui] showLoading',\n    hideLoading: '[ui] hideLoading',\n    showClassificationModal: '[ui] showClassificationModal',\n    hideClassificationModal: '[ui] hideClassificationModal',\n    showMovieModal: '[ui] showMovieModal',\n    hideMovieModal: '[ui] hideMovieModal',\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  clasifications: [],\n  active: null,\n};\n\nexport const clasificationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.addClasification:\n      return {\n        ...state,\n        clasifications: [action.payload, ...state.clasifications],\n      };\n    case types.deleteClasification:\n      return {\n        ...state,\n        clasifications: state.clasifications.filter((c) => c._id !== action.payload),\n      };\n    case types.loadClasifications:\n      console.log(action.payload);\n      return {\n        ...state,\n        clasifications: action.payload\n      };\n    case types.updateClasification:\n      return {\n        ...state,\n        clasifications: state.clasifications.map((c) => {\n          if (c._id === action.payload._id) {\n            return {\n              ...action.payload,\n            };\n          } else {\n            return c;\n          }\n        }),\n      };\n    case types.setActiveClassification:\n      return {\n        ...state,\n        active: action.payload,\n      };\n    case types.clearActiveClassification:\n      return {\n        ...state,\n        active: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n  movies: [],\n  active: null,\n};\n\nexport const moviesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.addMovie:\n      return {\n        ...state,\n        movies: [action.payload, ...state.movies],\n      };\n    case types.deleteMovie:\n      return {\n        ...state,\n        movies: state.movies.filter((m) => m._id !== action.payload),\n      };\n    case types.loadMovies:\n      console.log(action.payload);\n      return {\n        ...state,\n        movies: action.payload,\n      };\n    case types.updateMovie:\n      return {\n        ...state,\n        movies: state.movies.map((m) => {\n          if (m._id === action.payload._id) {\n            return {\n              ...action.payload,\n            };\n          } else {\n            return m;\n          }\n        }),\n      };\n    case types.setActiveMovie:\n      return {\n        ...state,\n        active: action.payload,\n      };\n    case types.clearActiveMovie:\n      return {\n        ...state,\n        active: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    movieModal: false,\n    classificationModal: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.showLoading:\n            return {\n                loading: true\n            };\n        case types.hideLoading:\n            return {\n                loading: false\n            }\n        case types.showClassificationModal:\n            return {\n                ...state,\n                classificationModal: true\n            };\n        case types.hideClassificationModal:\n            return {\n                ...state,\n                classificationModal: false\n            }\n        case types.showMovieModal:\n            return {\n                ...state,\n                movieModal: true\n            };\n        case types.hideMovieModal:\n            return {\n                ...state,\n                movieModal: false\n            }\n        default:\n            return state;\n    }\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { clasificationReducer } from \"../reducers/clasificationReducer\";\nimport { moviesReducer } from \"../reducers/movieReducer\";\nimport { uiReducer } from \"../reducers/uiReducer\";\n\nconst composeEnhancers =\n  (typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nconst reducers = combineReducers({\n  ui: uiReducer,\n  movies: moviesReducer,\n  clasification: clasificationReducer,\n});\n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import { faFilm } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Navbar = () => {\n    return (\n        <div className=\"nav__container\">\n            <Link className=\"nav__link ml-5\" to=\"/movies\"> Movies </Link>\n            <FontAwesomeIcon className=\"nav__brand ml-5\" icon={faFilm} />\n            <Link className=\"nav__link ml-5\" to=\"/clasification\"> Classification </Link>\n        </div>\n    )\n}\n","export const modalStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};","import { types } from \"../types/types\";\n\nexport const showLoading = () => ({\n    type: types.showLoading\n});\n\nexport const hideLoading = () => ({\n    type: types.hideLoading\n});\n\nexport const showClassificationModal = () => ({\n    type: types.showClassificationModal\n});\n\nexport const hideClassificationModal = () => ({\n    type: types.hideClassificationModal\n});\n\nexport const showMovieModal = () => ({\n    type: types.showMovieModal\n});\n\nexport const hideMovieModal = () => ({\n    type: types.hideMovieModal\n});\n","import Swal from \"sweetalert2\";\nimport { types } from \"../types/types\";\nimport { hideLoading, showLoading } from \"./ui\";\n\nconst endPoint = process.env.REACT_APP_API + \"/movie\";\n\n// Synchronous actions\n\nexport const addMovie = (movie) => ({\n  type: types.addMovie,\n  payload: movie,\n});\n\nexport const deleteMovie = (movieId) => ({\n  type: types.deleteMovie,\n  payload: movieId,\n});\n\nexport const updateMovie = (movie) => ({\n  type: types.updateMovie,\n  payload: movie,\n});\n\nexport const loadMovies = (movies) => ({\n  type: types.loadMovies,\n  payload: movies,\n});\n\nexport const setActiveMovie = (movie) => ({\n  type: types.setActiveMovie,\n  payload: movie,\n});\n\nexport const clearActiveMovie = () => ({\n  type: types.clearActiveMovie,\n});\n\n// Asynchronous actions\n\nexport const startAddMovie = (movie) => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    const { clasifications } = getState().clasification;\n    const clasification = clasifications.find(\n      (c) => c._id === movie.clasification\n    );\n    const res = await fetch(endPoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(movie),\n    });\n    const movieRes = await res.json();\n    dispatch(hideLoading());\n    if(movieRes.ok) {\n      dispatch(\n        addMovie({\n          ...movieRes.movie,\n          clasification,\n        })\n      );\n      Swal.fire('Information', 'Movie added successfully', 'success');\n    } else {\n      Swal.fire('Information', movieRes.message, 'error');\n    }\n  };\n};\n\nexport const startDeleteMovie = (movieId) => {\n  return async (dispatch) => {\n    dispatch(showLoading());\n    const res = await fetch(`${endPoint}/${movieId}`, {\n      method: \"DELETE\",\n    });\n    const movieRes = await res.json();\n    console.log(movieRes);\n    dispatch(hideLoading());\n    if(movieRes.ok) {\n      dispatch(deleteMovie(movieId));\n      Swal.fire('Information', 'Movie deleted successfully', 'success');\n    } else {\n      Swal.fire('Information', movieRes.message, 'error');\n    }\n  };\n};\n\nexport const startUpdateMovie = (movie) => {\n  return async (dispatch, getState) => {\n    dispatch(showLoading());\n    const { clasifications } = getState().clasification;\n    const clasification = clasifications.find(\n      (c) => c._id === movie.clasification\n    );\n    const res = await fetch(`${endPoint}/${movie._id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(movie),\n    });\n    const movieRes = await res.json();\n    dispatch(hideLoading());\n    if(movieRes.ok) {\n      dispatch(\n        updateMovie({\n          ...movieRes.movie,\n          clasification,\n        })\n      );\n      Swal.fire('Information', 'Movie updated successfully', 'success');\n    } else {\n      Swal.fire('Information', movieRes.message, 'error');\n    }\n  };\n};\n\nexport const startLoadMovie = () => {\n  return async (dispatch) => {\n    const res = await fetch(endPoint);\n    const movieRes = await res.json();\n    if(movieRes.ok) {\n      dispatch(loadMovies(movieRes.movies));\n    } else {\n      Swal.fire('Information', movieRes.message, 'error');\n    }\n  };\n};\n","import Swal from 'sweetalert2';\nimport { types } from '../types/types';\nimport { startLoadMovie } from './movie';\nimport { hideLoading, showLoading } from './ui';\n\nconst endPoint = process.env.REACT_APP_API + '/clasification';\n\n// Synchronous actions\n\nexport const addClasification = (clasification) => ({\n  type: types.addClasification,\n  payload: clasification,\n});\n\nexport const deleteClasification = (clasificationId) => ({\n  type: types.deleteClasification,\n  payload: clasificationId,\n});\n\nexport const updateClasification = (clasification) => ({\n  type: types.updateClasification,\n  payload: clasification,\n});\n\nexport const loadClasifications = (clasifications) => ({\n  type: types.loadClasifications,\n  payload: clasifications,\n});\n\nexport const setActiveClasification = (clasification) => ({\n  type: types.setActiveClassification,\n  payload: clasification,\n});\n\nexport const clearActiveClasifications = () => ({\n  type: types.clearActiveClassification\n});\n\n// Asynchronous actions\n\nexport const startAddClasification = (clasification) => {\n  return async (dispatch) => {\n    dispatch(showLoading());\n    const res = await fetch(endPoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(clasification),\n    });\n    const clasificationRes = await res.json();\n    dispatch(hideLoading());\n    if(clasificationRes.ok) {\n      dispatch(addClasification(clasificationRes.clasification));\n      Swal.fire('Information', 'Classification added successfully', 'success');\n    } else {\n      Swal.fire('Information', clasificationRes.message, 'error');\n    }\n  };\n};\n\nexport const startDeleteClasification = (clasificationId) => {\n  return async (dispatch) => {\n    dispatch(showLoading());\n    const res = await fetch(`${endPoint}/${clasificationId}`, {\n      method: 'DELETE'\n    });\n    const clasificationRes = await res.json();\n    dispatch(hideLoading());\n    if(clasificationRes.ok) {\n      dispatch(deleteClasification(clasificationId));\n      dispatch(startLoadMovie());\n      Swal.fire('Information', 'Classification deleted successfully', 'success');\n    } else {\n      Swal.fire('Information', clasificationRes.message, 'error');\n    }\n  };\n};\n\nexport const startUpdateClasification = (clasification) => {\n  return async (dispatch) => {\n    dispatch(showLoading());\n    const res = await fetch(`${endPoint}/${clasification._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(clasification),\n    });\n    const clasificationRes = await res.json();\n    dispatch(hideLoading());\n    if(clasificationRes.ok) {\n      dispatch(updateClasification(clasificationRes.clasification));\n      dispatch(startLoadMovie());\n      Swal.fire('Information', 'Classification updated successfully', 'success');\n    } else {\n      Swal.fire('Information', clasificationRes.message, 'error');\n    }\n  };\n};\n\nexport const startLoadClasification = () => {\n  return async (dispatch) => {\n    const res = await fetch(endPoint);\n    const clasificationRes = await res.json();\n    console.log(clasificationRes.clasifications);\n    if(clasificationRes.ok) {\n      dispatch(loadClasifications(clasificationRes.clasifications));\n    } else {\n      Swal.fire('Information', clasificationRes.message, 'error');\n    }\n  };\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { modalStyles } from \"../../fixtures/modalStyles\";\nimport validator from \"validator\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  clearActiveClasifications,\n  startAddClasification,\n  startUpdateClasification,\n} from \"../../redux/actions/clasification\";\nimport { hideClassificationModal } from \"../../redux/actions/ui\";\n\nModal.setAppElement(\"#root\");\n\nexport const ClassificationForm = () => {\n  const [name, setName] = useState(\"\");\n  const { classificationModal } = useSelector((state) => state.ui);\n  const { active } = useSelector((state) => state.clasification);\n  const isLoadActive = useRef(false);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      if (active) {\n        dispatch(\n          startUpdateClasification({\n            ...active,\n            name,\n          })\n        );\n      } else {\n        dispatch(startAddClasification({ name }));\n      }\n      setName(\"\");\n      handleCloseModal();\n    }\n  };\n\n  const validateForm = () => {\n    if (validator.isEmpty(name)) {\n      Swal.fire(\"Information\", \"Name cannot be empty\", \"error\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleCloseModal = () => {\n    dispatch(hideClassificationModal());\n    dispatch(clearActiveClasifications());\n  };\n\n  useEffect(() => {\n    if (active && !isLoadActive.current) {\n      isLoadActive.current = true;\n      setName(active.name);\n    }\n  }, [active]);\n\n  return (\n    <Modal isOpen={classificationModal} style={modalStyles}>\n      <button\n        className=\"btn btn-danger btn-close-modal\"\n        onClick={handleCloseModal}\n      >\n        Close\n      </button>\n      <div className=\"form__title mb-5\">Classification</div>\n      <form onSubmit={handleSubmit} className=\"form__app\">\n        <label>Name:</label>\n        <input value={name} onChange={handleChange} className=\"mb-5\" />\n        <button className=\"btn btn-success mt-5\">Save</button>\n      </form>\n    </Modal>\n  );\n};\n","import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveClasification, startDeleteClasification } from '../../redux/actions/clasification';\nimport { showClassificationModal } from '../../redux/actions/ui';\n\nexport const ClasificationTable = () => {\n    const dispatch = useDispatch();\n    const {clasifications} = useSelector(state => state.clasification);\n\n    const handleEdit = (clasification) => {\n        dispatch(setActiveClasification(clasification));\n        dispatch(showClassificationModal());\n    }\n\n    const handleDelete = (clasificationId) => {\n        dispatch(startDeleteClasification(clasificationId));\n    }\n\n    const renderItems = clasifications.map(c => {\n        return(\n            <tr key={c._id}>\n                    <td >{c.name}</td>\n                    <td>\n                        <FontAwesomeIcon onClick={() => handleEdit(c)} className=\"table__action-primary\"  icon={faEdit}/>\n                        <FontAwesomeIcon onClick={() => handleDelete(c._id)} className=\"table__action-danger ml-1\"  icon={faTrash}/>\n                    </td>\n            </tr>\n        )\n    })\n\n\n    return (\n        <div className=\"page__table-container\">\n        <table className=\"table__app\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {renderItems}\n            </tbody>\n        </table>\n        { clasifications.length === 0 && <div className=\"table__empty-message\"> There are not any classification, you can add one with the bottow below </div>  }\n    </div>\n    )\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ClassificationForm } from \"../components/clasification/ClasificationForm\";\nimport { ClasificationTable } from \"../components/clasification/ClasificationTable\";\nimport { showClassificationModal } from \"../redux/actions/ui\";\n\nexport const ClasificationPage = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(showClassificationModal());\n  };\n  return (\n    <div>\n      <ClassificationForm />\n      <div className=\"page__container\">\n        <ClasificationTable />\n        <button onClick={handleOpenModal} className=\"btn btn-primary mt-5\">\n          <FontAwesomeIcon className=\"mr-5\" icon={faPlus} />\n          Add Classification\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport Modal from \"react-modal\";\nimport validator from 'validator'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { modalStyles } from \"../../fixtures/modalStyles\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { clearActiveMovie, startAddMovie, startUpdateMovie } from \"../../redux/actions/movie\";\nimport { hideMovieModal } from \"../../redux/actions/ui\";\nimport Swal from \"sweetalert2\";\n\nModal.setAppElement(\"#root\");\n\nconst initialState = {\n  name: \"\",\n  director: \"\",\n  clasification: \"\",\n}\nexport const MoviesForm = () => {\n  const [formValues, handleChange, reset] = useForm(initialState);\n  const { name, director, clasification } = formValues;\n  const { active } = useSelector(state => state.movies);\n  const isLoadActive = useRef(false);\n  const { movieModal } = useSelector((state) => state.ui);\n  const { clasifications } = useSelector((state) => state.clasification);\n  const dispatch = useDispatch();\n\n  const handleCloseModal = () => {\n    isLoadActive.current = false;\n    dispatch(hideMovieModal());\n    dispatch(clearActiveMovie());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(validateForm()) {\n      if(active) {\n        dispatch(startUpdateMovie(\n          formValues\n        ));\n      } else {\n        dispatch(startAddMovie(formValues));\n      }\n      reset(initialState);\n      handleCloseModal();\n    }\n  }\n\n  const validateForm = () => {\n    if(validator.isEmpty(name)) {\n      Swal.fire('Information', 'Name cannot be empty', 'error');\n      return false;\n    } else if(validator.isEmpty(director)) {\n      Swal.fire('Information', 'Director cannot be empty', 'error');\n      return false;\n    } else if(validator.isEmpty(clasification)) {\n      Swal.fire('Information', 'Classification cannot be empty, If there are not classification you can create one in classification menu', 'error');\n      return false;\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    if(active && !isLoadActive.current) {\n      isLoadActive.current = true;\n      const { clasification, ...movie } = active;\n      reset({\n        ...movie,\n        clasification: clasification?._id\n      })\n    }\n  }, [active, reset])\n\n  return (\n    <Modal isOpen={movieModal} style={modalStyles}>\n      <button\n        className=\"btn btn-danger btn-close-modal\"\n        onClick={handleCloseModal}\n      >\n        Close\n      </button>\n      <div className=\"form__title mb-5\">Movie</div>\n      <form onSubmit={handleSubmit} className=\"form__app\">\n        <label>Name:</label>\n        <input value={name} name=\"name\" onChange={handleChange} className=\"mb-5\" />\n        <label>Director:</label>\n        <input value={director} name=\"director\" onChange={handleChange}  className=\"mb-5\" />\n        <label>Classification:</label>\n        <select value={clasification} name=\"clasification\" onChange={handleChange}  className=\"mb-5\">\n          <option></option>\n          {clasifications.map((c) => {\n            return (\n              <option key={c._id} value={c._id}>\n                {c.name}\n              </option>\n            );\n          })}\n        </select>\n        <button className=\"btn btn-success mt-5\">Save</button>\n      </form>\n    </Modal>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const initValues = (init) => {\n    setValues(init);\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, initValues ,reset];\n};\n","import { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveMovie, startDeleteMovie } from \"../../redux/actions/movie\";\nimport { showMovieModal } from \"../../redux/actions/ui\";\n\nexport const MoviesTable = () => {\n  const dispatch = useDispatch();\n  const { movies } = useSelector((state) => state.movies);\n\n  const handleEdit = (movie) => {\n    dispatch(setActiveMovie(movie));\n    dispatch(showMovieModal());\n  };\n\n  const handleDelete = (movieId) => {\n    dispatch(startDeleteMovie(movieId));\n  };\n\n  const renderItems = movies?.map((m) => {\n    return (\n      <tr key={m._id}>\n        <td>{m.name}</td>\n        <td>{m.director}</td>\n        <td>{m.clasification?.name}</td>\n        <td>\n          <FontAwesomeIcon\n            onClick={() => handleEdit(m)}\n            className=\"table__action-primary\"\n            icon={faEdit}\n          />\n          <FontAwesomeIcon\n            onClick={() => handleDelete(m._id)}\n            className=\"table__action-danger ml-1\"\n            icon={faTrash}\n          />\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div className=\"page__table-container\">\n      <table className=\"table__app\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Director</th>\n            <th>Classification</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>{renderItems}</tbody>\n      </table>\n      { movies.length === 0 && <div className=\"table__empty-message\"> There are not any movie, you can add one with the bottow below </div>  }\n    </div>\n  );\n};\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { MoviesForm } from \"../components/movies/MoviesForm\";\nimport { MoviesTable } from \"../components/movies/MoviesTable\";\nimport { showMovieModal } from \"../redux/actions/ui\";\n\nexport const MoviesPage = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenModal = () => {\n    dispatch(showMovieModal());\n  };\n\n  return (\n    <div>\n      <MoviesForm />\n      <div className=\"page__container\">\n        <MoviesTable />\n        <button onClick={handleOpenModal} className=\"btn btn-primary mt-5\">\n          <FontAwesomeIcon className=\"mr-5\" icon={faPlus} />\n          Add Movie\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Navbar } from \"../components/ui/Navbar\";\nimport { ClasificationPage } from \"../pages/ClasificationPage\";\nimport { MoviesPage } from \"../pages/MoviesPage\";\nimport { startLoadClasification } from \"../redux/actions/clasification\";\nimport { startLoadMovie } from \"../redux/actions/movie\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.ui);\n\n  useEffect(() => {\n    dispatch(startLoadClasification());\n    dispatch(startLoadMovie());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(loading) {\n      Swal.showLoading(Swal.getDenyButton());\n    }\n  }, [loading]);\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/movies\" component={MoviesPage} />\n          <Route exact path=\"/clasification\" component={ClasificationPage} />\n          <Redirect to=\"/movies\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store/store';\nimport { AppRouter } from './routes/AppRouter';\nimport './styles/styles.scss';\n\n\n\nexport const MoviesApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MoviesApp } from \"./MoviesApp\";\n\nReactDOM.render(<MoviesApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}